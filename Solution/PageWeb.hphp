<?php
/**
 * Created by PhpStorm.
 * User: Jesse Tam
 * Date: 2019/6/5 0005
 * Time: 下午 8:48
 */

namespace Solution;

require_once __DIR__ . "/Page.hphp";

use Etc\Pub;
use ScriptEngine\ScriptEngine;
use Solution\PageWeb\ExecuteScript2Thread;
use TamPub1\DelphiString;
use TamPub1\Etc;
use TamPub1\StringBuilder;
use TamPub1\StringFunc;
use TamPub1\Tree;

class PageWeb extends Page {
    /**
     * @var \ScriptEngine\ScriptEngine
     */
    public $scriptEngine = null;
    /**
     * @var ScriptDatabase
     */
    private $scriptDatabase = null;
    /**
     * @var ScriptES
     */
    private $scriptES = null;
    /**
     * @var Solution
     */
    public $solution = null;

    /**
     * @var StringBuilder
     */
    public $jsStringSearchText;
    public $jsStringSearchTextEnabled = false;

    public function __construct() {
        parent::__construct();
        $this->jsStringSearchText = new StringBuilder();
    }

    public function initScriptEngine(
        $session, //System.Web.SessionState.HttpSessionState session,
        $request, //System.Web.HttpRequest request,
        $response //System.Web.HttpResponse response
    ): PageWeb\ScriptEngineInst {
        $task = new PageWeb\ThreadInitScript();
        $task->session = $session;
        $task->request = $request;
        $task->response = $response;
        $task->handle = $this;

        $task->start();
        while (true) {
            if ($task->complete) break;
            usleep(5000);
        }
        return $task->result;
    }

    public function disposeScriptEngine(): void {
        /*
        if (scriptDatabase != null) {
            scriptDatabase . dispose();
            scriptDatabase = null;
        }
        if (scriptES != null) {
            if (scriptES . wsProxy != null) {
                scriptES . wsProxy . Dispose();
                scriptES . wsProxy = null;
            }
            scriptES = null;
        }
        if (scriptEngine != null) {
            scriptEngine . engine . SetParameter("session", null);
            scriptEngine . engine . SetParameter("request", null);
            scriptEngine . engine . SetParameter("response", null);
            scriptEngine . engine . SetParameter("es", null);
            scriptEngine . engine . SetParameter("db", null);
            scriptEngine . engine . SetParameter("console", null);
            scriptEngine . dispose();
            scriptEngine = null;
        }
        */
    }

    public function fInitScriptEngine(
        $session, //System.Web.SessionState.HttpSessionState session,
        $request, //System.Web.HttpRequest request,
        $response //System.Web.HttpResponse response
    ): PageWeb\ScriptEngineInst {
        $this->disposeScriptEngine();
        $result = new PageWeb\ScriptEngineInst();
        $scriptEngine = new ScriptEngine();
        try {
            $scriptEngine->engine->executeString(
                "var g5 = { };\n" .
                "var g6 = { };\n" .
                "var g7 = { };\n"
            );
            //初始化session控件
            $scriptEngine->engine->session = new ScriptSession($session);
            //初始化request控件
            $scriptEngine->engine->request = new ScriptRequest($session);
            //初始化response控件
            $result->scriptResponse = ScriptResponse($response);
            $scriptEngine->engine->response = $result->scriptResponse;
            //初始化es类
            $scriptES = new ScriptES();
            $scriptEngine->engine->es = $this->scriptES;
            //初始化数据库控件:db
            $project = $this->solution->getProject(projectItem);
            $scriptDatabase = new ScriptDatabase($project->value->dbConnection);
            $scriptEngine->engine->db = $scriptDatabase;
            //准备eio接口
            $scriptEngine->engine->executeString(
                "function StringData2() {\n" .
                "    this.buffi = \"\";\n" .
                "    this.buffo = \"\";\n" .
                "    this.sp = 0;\n" .
                "    this.clear = function () {\n" .
                "        this.buffi = \"\";\n" .
                "        this.buffo = \"\";\n" .
                "        this.sp = 0;\n" .
                "    }\n" .
                "    this.appendByte = function (value) {\n" .
                "        if ((value < 0) || (value >= 0xff)) {\n" .
                "            value = value & 0xff;\n" .
                "        }\n" .
                "        value = value.toString(16);\n" .
                "        if (value.length == 1) {\n" .
                "            value = \"0\" + value;\n" .
                "        }\n" .
                "        this.buffo = this.buffo + value;\n" .
                "    }\n" .
                "    this.appendWord = function (word) {\n" .
                "        word = word & 0xffff;\n" .
                "        this.appendByte(word & 0xff);\n" .
                "        this.appendByte(word >> 8);\n" .
                "    }\n" .
                "    this.appendInt32 = function (int32) {\n" .
                "        this.appendWord(int32 & 0xffff);\n" .
                "        this.appendWord(int32 >>> 16);\n" .
                "    }\n" .
                "    this.appendString8 = function (str) {\n" .
                "        if (str == null) {\n" .
                "            str = \"\";\n" .
                "        }\n" .
                "        str = str.substring(0, Math.min(str.length, 0xff));\n" .
                "        this.appendByte(str.length);\n" .
                "        this.buffo = this.buffo + str;\n" .
                "    }\n" .
                "    this.appendString16 = function (str) {\n" .
                "        if (str == null) {\n" .
                "            str = \"\";\n" .
                "        }\n" .
                "        str = str.substring(0, Math.min(str.length, 0xffff));\n" .
                "        this.appendWord(str.length);\n" .
                "        this.buffo = this.buffo + str;\n" .
                "    }\n" .
                "    this.appendString32 = function (str) {\n" .
                "        if (str == null) {\n" .
                "            str = \"\";\n" .
                "        }\n" .
                "        this.appendInt32(str.length);\n" .
                "        this.buffo = this.buffo + str;\n" .
                "    }\n" .
                "    this.readByte = function () {\n" .
                "        if (this.sp + 1 >= this.buffi.length) {\n" .
                "            this.sp = this.buffi.length;\n" .
                "            return 0;\n" .
                "        }\n" .
                "        var s = this.buffi.substr(this.sp, 2);\n" .
                "        this.sp += 2;\n" .
                "        return parseInt(s, 16);\n" .
                "    }\n" .
                "    this.readWord = function () {\n" .
                "        var result = this.readByte();\n" .
                "        result += (this.readByte() << 8);\n" .
                "        return result;\n" .
                "    },\n" .
                "    this.readInt32 = function () {\n" .
                "        var result = this.readWord();\n" .
                "        result = result | (this.readWord() << 16);\n" .
                "        return result;\n" .
                "    }\n" .
                "    this.readString8 = function () {\n" .
                "        var len = this.readByte();\n" .
                "        len = Math.min(this.buffi.length - this.sp, len);\n" .
                "        this.sp += len;\n" .
                "        return this.buffi.substr(this.sp - len, len);\n" .
                "    }\n" .
                "    this.readString16 = function () {\n" .
                "        var len = this.readWord();\n" .
                "        len = Math.min(this.buffi.length - this.sp, len);\n" .
                "        this.sp += len;\n" .
                "        return this.buffi.substr(this.sp - len, len);\n" .
                "    }\n" .
                "    this.readString32 = function () {\n" .
                "        var len = this.readInt32();\n" .
                "        len = Math.min(this.buffi.length - this.sp, len);\n" .
                "        this.sp += len;\n" .
                "        return this.buffi.substr(this.sp - len, len);\n" .
                "    },\n" .
                "    this.appendDataSet = function (sqlResult, fields, rowStart, rowCount) {\n" .
                "        var f = fields.split(\",\");\n" .
                "        this.appendWord(f.length);\n" .
                "        var sp = this.buffo.length;\n" .
                "        var count = 0;\n" .
                "        for (var i = 0; i < rowStart; i++) {\n" .
                "            if (!db.read(sqlResult)) break;\n" .
                "        }\n" .
                "        for (var i = 0; i < rowCount; i++) {\n" .
                "            if (!db.read(sqlResult)) break;\n" .
                "            count++;\n" .
                "            for (var j=0; j<f.length; j++) {\n" .
                "                this.appendString16(db.getString(sqlResult, f[j]));\n" .
                "            }\n" .
                "        }\n" .
                "        var data = this.buffo.substr(sp, this.buffo.length);\n" .
                "        this.buffo = this.buffo.substr(0, sp);\n" .
                "        this.appendWord(count);\n" .
                "        this.buffo = this.buffo + data;\n" .
                "        return count;\n" .
                "    }\n" .
                "    this.appendWsDataSet = function (wsDataSet, tableIndex, fields, rowStart, rowCount) {\n" .
                "        var ws = new StringData2();\n" .
                "        ws.buffi = wsDataSet;\n" .
                "        var i, j, k, count;\n" .
                "        var tableCount = ws.readWord();\n" .
                "        for (i=0; i<tableIndex; i++) {\n" .
                "            count = ws.readWord()*(ws.readWord()+1);\n" .
                "            for (j = 0; j < count; j++) ws.readString16();\n" .
                "        }\n" .
                "        var f = fields.split(\",\");\n" .
                "        this.appendWord(f.length);\n" .
                "        var sp = this.buffo.length;\n" .
                "        count = 0;\n" .
                "        var x = ws.readWord();\n" .
                "        var y = ws.readWord();\n" .
                "        var cols = new Array();\n" .
                "        for (i = 0; i < x; i++) {\n" .
                "            cols.push(ws.readString16());\n" .
                "        }\n" .
                "        for (i = 0; i < rowStart; i++) {\n" .
                "            for (j = 0; j < x; j++) {\n" .
                "                ws.readString16();\n" .
                "            }\n" .
                "        }\n" .
                "        for (i = 0; i < f.length; i++) {\n" .
                "            f[i] = f[i].toLowerCase();\n" .
                "        }\n" .
                "        var col = new Array();\n" .
                "        for (i = 0; i < rowCount; i++) {\n" .
                "            if (i >= y) break;\n" .
                "            count++;\n" .
                "            col.length = 0;\n" .
                "            for (j = 0; j < x; j++) {\n" .
                "                col.push(ws.readString16());\n" .
                "            }\n" .
                "            for (j = 0; j < f.length; j++) {\n" .
                "                for (k = 0; k < cols.length; k++) {\n" .
                "                    if (cols[k].toLowerCase() == f[j]) {\n" .
                "                        this.appendString16(col[k]);\n" .
                "                        break;\n" .
                "                    }\n" .
                "                }\n" .
                "                if (k >= cols.length) {\n" .
                "                    this.appendString16(\"\");\n" .
                "                }\n" .
                "            }\n" .
                "        }\n" .
                "        var data = this.buffo.substr(sp, this.buffo.length);\n" .
                "        this.buffo = this.buffo.substr(0, sp);\n" .
                "        this.appendWord(count);\n" .
                "        this.buffo = this.buffo + data;\n" .
                "        return count;\n" .
                "    }\n" .
                "    this.appendFields = function (fields) {\n" .
                "        var f = fields.split(\",\");\n" .
                "        this.appendWord(f.length);\n" .
                "        this.appendWord(1);\n" .
                "        for (var i=0; i<f.length; i++) {\n" .
                "            this.appendString16(f[i]);\n" .
                "        }\n" .
                "        return f.length;\n" .
                "    }\n" .
                "}\n" .
                "var eio = new StringData2();\n" . "\x00\x00\x00\x00"
            );
        } catch (\Exception $ee) {
            $this->disposeScriptEngine();
            \Etc\Pub::$log->writeWarning("script init error, err=" . $ee->Message . ",stacktrace=" . $ee->StackTrace);
            return null;
        }
        return $result;
    }

    /// <summary>由外部提供的ee.aspx(eEngine)所在的URL路径，如：/eengine</summary>
    public $applicationPath = "";
    /// <summary>由外部提供的ee的绝对路径，如：http://www.xxx.com/eengine </summary>
    public $eePath = "";
    private $offlineMode = false;
    /// <summary>cache的相对目录，如：../../</summary>
    private $relateCacheRoot = "";

    public function generatePage(): string {
        $r = new StringBuilder();
        //Etc.Pub.log.writeCommon("start generate webpage, url=" + url);
        $scriptEngineInst = $this->initScriptEngine(null, null, null);
        if ($scriptEngineInst == null) {
            return "";
        }
        $offlineModeBak = $this->offlineMode;
        $this->offlineMode = true;
        $path = Solution::getPath($this->projectItem);
        $this->relateCacheRoot = "../";
        for ($i = 0; $i < StringFunc::length($path); $i++) {
            if ($path[$i] === '/') {
                $this->relateCacheRoot .= "../";
            }
        }
        $jsStringTitle = $this->generateJsStringTitle();
        $jsStringHead = $this->generateJsStringHead();
        $jsStringInclude = $this->generateJsStringInclude();
        $jsStringOnPageCreate = $this->generateJsStringOnPageCreate();
        $jsStringOnPageLoad = $this->generateJsStringOnPageLoad();
        $jsStringInitControl = $this->generateJsStringInitControl();
        $jsStringOnControlLoad = $this->generateJsStringOnControlLoad();
        //string jsStringSearchTextLocal;
        if ($this->jsStringSearchTextEnabled) {
            $jsStringSearchTextLocal = $this->jsStringSearchText->ToString();
        } else {
            $jsStringSearchTextLocal = "";
        }
        $this->disposeScriptEngine();
        $this->offlineMode = $offlineModeBak;

        $r->Append("<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n");
        $r->Append("<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n");
        $r->Append("<head runat=\"server\">\r\n");
        $r->Append("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\" />\r\n");
        $r->Append("    <title>\r\n");
        $r->Append("        " . $jsStringTitle . "</title>\r\n");
        $r->Append("    " . $jsStringHead . "\r\n");
        $r->Append("    <style type=\"text/css\"></style>\r\n");
        $r->Append("    <!-- <script src=\"" . $this->relateCacheRoot . "../Scripts/tampub3.js\" type=\"text/javascript\"></script> -->\r\n");
        $r->Append("    <script src=\"" . $this->relateCacheRoot . "../Scripts/eengine.js?v=0.36\" type=\"text/javascript\"></script>\r\n");
        $r->Append("    " . $jsStringInclude . "\r\n");
        $r->Append("    <script type=\"text/javascript\" language=\"javascript\">\r\n");
        $r->Append("        var layout;\r\n");
        $r->Append("        " . $jsStringOnPageCreate . "\r\n");
        $r->Append("        function onLoad() {\r\n");
        $r->Append("            try { \r\n");
        $r->Append("                eb.init();\r\n");
        $r->Append("                \$g(\"divSearchText\").style.overflow = \"hidden\";\r\n");
        $r->Append("                " . $jsStringOnPageLoad . "\r\n");
        $r->Append("                " . $jsStringInitControl . "\r\n");
        $r->Append("                " . $jsStringOnControlLoad . "\r\n");
        $r->Append("                setTimeout(timeFragment, 100);\r\n");
        $r->Append("            } catch (e) { \r\n");
        $r->Append("                alert(e.message); \r\n");
        $r->Append("                //alert(e.description) \r\n");
        $r->Append("                //alert(e.number) \r\n");
        $r->Append("                //alert(e.name) \r\n");
        $r->Append("            } \r\n");
        $r->Append("        }\r\n");
        $r->Append("        var lastCW = 0, lastCH = 0;\r\n");
        $r->Append("        ee.autoResize = true;\r\n");
        $r->Append("        function timeFragment() {\r\n");
        $r->Append("            if (!ee.autoResize) {\r\n");
        $r->Append("                setTimeout(timeFragment, 100);\r\n");
        $r->Append("                return;\r\n");
        $r->Append("            }\r\n");
        $r->Append("            var cw = \$g(\"divRoot\").offsetWidth;\r\n");
        $r->Append("            var ch = \$g(\"divRoot\").offsetHeight;\r\n");
        $r->Append("            if ((lastCW == cw) && (lastCH == ch)) {\r\n");
        $r->Append("                setTimeout(timeFragment, 100);\r\n");
        $r->Append("                return;\r\n");
        $r->Append("            }\r\n");
        $r->Append("            lastCW = cw;\r\n");
        $r->Append("            lastCH = ch;\r\n");
        $r->Append("\r\n");
        $r->Append("            eb.processDock();\r\n");
        $r->Append("\r\n");
        $r->Append("            setTimeout(timeFragment, 100);\r\n");
        $r->Append("        }\r\n");
        $r->Append("    </script>\r\n");
        $r->Append("</head>\r\n");
        $r->Append("<body onload=\"onLoad()\" style=\"margin: 0px; padding: 0px; background-color: #a0a0a0;\r\n");
        $r->Append("    width: 100%; height: 100%\">\r\n");
        $r->Append("    <div id=\"divSearchText\" style=\"position: absolute; width: 1px; height: 1px; overflow: hidden\">\r\n");
        $r->Append("        " . $this->jsStringSearchText->ToString() . "\r\n");
        $r->Append("    </div>\r\n");
        $r->Append("    <div id=\"divRoot\" style=\"position: absolute; width: 100%; height: 100%;\">\r\n");
        $r->Append("    </div>\r\n");
        $r->Append("</body>\r\n");
        $r->Append("</html>\r\n");

        return $r->ToString();
    }

    public function generateJsStringTitle(): string {
        //初始化搜索字串
        $this->jsStringSearchText->Clear();
        $this->jsStringSearchTextEnabled = false;

        $result = "";
        //TamPub1 . Tree < Control> node;
        $node = $this->controls->getFirst();
        while (true) {
            $node = $this->controls->getNext();
            if ($node == null) break;
            if ($node->value->type === "DivRoot") {
                $result = $this->scriptEngine->getInlineResult($node->value->property->getItem("pageTitle")->value->asString);
                if ($node->value->property->getItem("createSearchText")->value->asString === "true") {
                    $this->jsStringSearchTextEnabled = true;
                }
                break;
            }
        }
        return $result;
    }

    public function generateJsStringHead(): string {
        $result = "";
        //TamPub1 . Tree < Control> node;
        $node = $this->controls->getFirst();
        while (true) {
            $node = $this->controls->getNext();
            if ($node == null) break;
            if ($node->value->type->Equals("DivRoot")) {
                $result = $this->scriptEngine->getInlineResult($node->value->property->getItem("pageHead")->value->asString);
                break;
            }
        }
        return $result;
    }

    public function generateJsStringInclude(): string {
        $result = "";
        //TamPub1 . Tree < Control> $node;
        $node = $this->controls->getFirst();
        while (true) {
            $node = $this->controls->getNext();
            if ($node == null) break;
            if ($node->value->type->Equals("RichEdit")) {
                $result .= "\n    <script src=\"Scripts/richedit.js\" type=\"text/javascript\"></script>";
                break;
            }
        }
        return $result;
    }

    public function generateJsStringOnPageCreate(): string {
        $result = new StringBuilder();
        //全局环境变量
        $result->Append("ee.pageUrl=\"/" . $this->solution->getProject($this->$this->projectItem)->value->projectFolderName . Solution::getPath($this->$this->projectItem) . "\";\n");
        if ($this->offlineMode) {
            $result->Append("ee.pageRoot=\"" . $this->relateCacheRoot . $this->solution->getProject($this->$this->projectItem)->value->projectFolderName . "\";\n");
            $result->Append("ee.relatedCache=\"" . $this->relateCacheRoot . "\";\n");
            $result->Append("ee.eePath=\"" . $this->eePath . "\";\n");
            $result->Append("ee.pageRootHtm=\"/index.htm\";\n");
        } else {
            $result->Append("ee.pageRoot=\"ee.aspx?_L_=/" . $this->solution->getProject($this->$this->projectItem)->value->projectFolderName . "\";\n");
        }
        //产生事务集
        for ($i = 0; $i < count($this->taskSet->items); $i++) {
            //ajax变量
            $result->Append("var " . $this->taskSet->items[$i]->name . "_ajax = new TamAjax(\"" . $this->taskSet->items[$i]->name . "_ajax\");\n");
            //post函数
            $result->Append("function " . $this->taskSet->items[$i]->name . "() {\n");
            $result->Append("\teio.clear();\n");
            $scripts = StringFunc::split(StringFunc::replace($this->taskSet->items[$i]->script1, "\r\n", "\n"), '\n');
            for ($j = 0; $j < count($scripts); $j++) {
                $result->Append("\t" . $scripts[$j] . "\n");
            }
            $result->Append("\tee.post(\"" . $this->taskSet->items[$i]->name . "\");\n");
            $result->Append("}\n");
            //ack函数
            $result->Append($this->taskSet->items[$i]->name . "_ajax.onReceive = function(sender) {\n");
            //$result->Append( "alert(sender.responseText);\n"; //测试
            $result->Append("\teio.clear();\n");
            $result->Append("\teio.buffi=sender.responseText;\n");
            $scripts = StringFunc::split(StringFunc::replace($this->taskSet->items[$i]->script3, "\r\n", "\n"), '\n');
            for ($j = 0; $j < count($scripts); $j++) {
                $result->Append("\t" . $scripts[$j] . "\n");
            }
            $result->Append("}\n");
        }
        //divRoot.onPageCreate
        //TamPub1 . Tree < Control> $node;
        $node = $this->controls->getFirst();
        while (true) {
            $node = $this->controls->getNext();
            if ($node == null) break;
            if ($node->value->type === "DivRoot") {
                $s = $node->value->property->getItem("onPageCreate")->value->asString;
                if (StringFunc::length($s) > 0) {
                    $result->Append($this->scriptEngine->getInlineResult($s) . "\n");
                }
            } else if ($node->value->type === "FileUpload") {
                $name = $node->value->name;
                //upload file: get progress
                $result->Append(
                    "var " . $name . "_ajax = new TamAjax(\"" . $name . "_ajax\");\n" .
                    "function " . $name . "_start() {\n" .
                    "	ee.getControl(\"" . $name . "\").uploadStop = false;\n" .
                    "	ee.post(\"" . $name . "\",\"_F_=P\");\n" .
                    "}\n" .
                    "" . $name . "_ajax.onReceive = function(sender) {\n" .
                    "   var c = ee.getControl(\"" . $name . "\");\n" .
                    "   if (c.uploadStop) return;\n" .
                    "	eio.clear();\n" .
                    "	eio.buffi=sender.responseText;\n" .
                    "   var cmd = eio.readString8();\n" .
                    "   if (cmd == \"pos\") {\n" .
                    "       var uploadSizeCurrent = eio.readInt32();\n" .
                    "       var uploadSizeTotal = eio.readInt32();\n" .
                    "       c.onUploadProgress(c.uploadFilePath, c.uploadFilename, c.uploadFileExt, uploadSizeCurrent, uploadSizeTotal);\n" .
                    "       setTimeout(" . $name . "_start, 300);\n" .
                    "   } else if (cmd == \"kill\") {\n" .
                    "       var errorString = eio.readString8();\n" .
                    "       c.onUploadError(c.uploadFilePath, c.uploadFilename, c.uploadFileExt, -2, errorString);\n" .
                    "   } else if (cmd == \"complete\") {\n" .
                    "       var buff = eio.readString16();\n" .
                    "       eio.clear();\n" .
                    "       eio.buffi = buff;\n" .
                    "       c.onUploadCompleteC(c.uploadFilePath, c.uploadFilename, c.uploadFileExt);\n" .
                    "   }\n" .
                    "}\n");
                //upload file: user stop
                $result->Append(
                    "var " . $name . "Stop_ajax = new TamAjax(\"" . $name . "Stop_ajax\");\n" .
                    "function " . $name . "_stop() {\n" .
                    "	eio.clear();\n" .
                    "	ee.post(\"" . $name . "\",\"_F_=S\");\n" .
                    "   var c = ee.getControl(\"" . $name . "\");\n" .
                    "   c.onUploadError(c.uploadFilePath, c.uploadFilename, c.uploadFileExt, -1, \"用户停止上传\");\n" .
                    "   c.uploadStop = true;\n" .
                    "}\n" .
                    "" . $name . "Stop_ajax.onReceive = function(sender) {\n" .
                    "}\n");
            }
        }
        return $result->ToString();
    }

    public function generateJsStringOnPageLoad(): string {
        $result = "";
        //TamPub1 . Tree < Control> $node;
        $node = $this->controls->getFirst();
        while (true) {
            $node = $this->controls->getNext();
            if ($node == null) break;
            if ($node->value->type === "DivRoot") {
                //onPageLoad事件
                $s = $node->value->property->getItem("onPageLoad")->value->asString;
                if (StringFunc::length($s) > 0) {
                    $result .= $this->scriptEngine->getInlineResult($s) . "\n";
                }
                break;
            }
        }
        return $result;
    }

    public function generateJsStringOnControlLoad(): string {
        $result = "";
        //TamPub1 . Tree < Control> $node;

        //初始化TableBody控件，eb.initTableBody(ee.getControl("tablebody1"));
        $node = $this->controls->getFirst();
        while (true) {
            $node = $this->controls->getNext();
            if ($node == null) break;
            if ($node->value->type === "TableBody") {
                if (StringFunc::length($node->value->property->getItem("tableTitle")->value->asString) > 0) {
                    $result .= "ee.getControl(\"" . $node->value->name . "\").tableTitle=ee.getControl(\"" . $node->value->property->getItem("tableTitle")->value->asString . "\");\n";
                }
                $result .= "eb.initTableBody(ee.getControl(\"" . $node->value->name . "\"));\n";
                if ($node->value->property->getItem("autoClear")->value->asString === "true") {
                    $result .= "ee.clearTableData(ee.getControl(\"" . $node->value->name . "\"));\n";
                }
            } else if ($node->value->type === "TableTitle") {
                if (StringFunc::length($node->value->property->getItem("tableBody")->value->asString) > 0) {
                    $result .= "ee.getControl(\"" . $node->value->name . "\").tableBody=ee.getControl(\"" . $node->value->property->getItem("tableBody")->value->asString . "\");\n";
                }
            }
        }
        //用户定义的divRoot.onControlLoad
        $node = $this->controls->getFirst();
        while (true) {
            $node = $this->controls->getNext();
            if ($node == null) break;
            if ($node->value->type === "DivRoot") {
                //onControlLoad事件
                $s = $node->value->property->getItem("onControlLoad")->value->asString;
                if (StringFunc::length($s) > 0) {
                    $result .= $this->scriptEngine->getInlineResult($s) . "\n";
                }
                //touch事件
                $s = $node->value->property->getItem("onSlideUp")->value->asString;
                if (StringFunc::length($s) > 0) {
                    $result .= "\$g(\"divRoot\").onSlideUp = function () {\n" . $this->scriptEngine->getInlineResult($s) . "\n}\n";
                }
                $s = $node->value->property->getItem("onSlideDown")->value->asString;
                if (StringFunc::length($s) > 0) {
                    $result .= "\$g(\"divRoot\").onSlideDown = function () {\n" . $this->scriptEngine->getInlineResult($s) . "\n}\n";
                }
                $s = $node->value->property->getItem("onSlideLeft")->value->asString;
                if (StringFunc::length($s) > 0) {
                    $result .= "\$g(\"divRoot\").onSlideLeft = function () {\n" . $this->scriptEngine->getInlineResult($s) . "\n}\n";
                }
                $s = $node->value->property->getItem("onSlideRight")->value->asString;
                if (StringFunc::length($s) > 0) {
                    $result .= "\$g(\"divRoot\").onSlideRight = function () {\n" . $this->scriptEngine->getInlineResult($s) . "\n}\n";
                }
                break;
            }
        }
        //启动动画
        $node = $this->controls->getFirst();
        while (true) {
            $node = $this->controls->getNext();
            if ($node == null) break;
            if ($this->getColonStringValue($node->value->property->getItem("aniAlpha")->value->asString) === "null" &&
                $this->getColonStringValue($node->value->property->getItem("aniPos")->value->asString) === "null" &&
                $this->getColonStringValue($node->value->property->getItem("aniSize")->value->asString) === "null") {
                continue;
            }
            if (!$node->value->property->getItem("aniAutoStart")->value->asString === "true") continue;
            //ee.showAni(ee.getControl("panel1"));
            $result .= "ee.showAni(ee.getControl(\"" . $node->value->name . "\"));\n";
        }
        return $result;
    }

    public function generateJsStringInitControl(): string {
        $result = new StringBuilder();
        $result->Append("var c;\n");
        //TamPub1 . Tree < Control> $node;
        $node = $this->controls->getFirst();
        while (true) {
            $node = $this->controls->getNext();
            if ($node == null) break;
            $result->Append($this->generateJsStringControl($node));
        }
        return $result->ToString();
    }

    private function generateJsStringControl(Tree $control): string {
        $result = "";
        if ($control->value->type === "Panel") {
            $result .= $this->generateJsStringPanel($control);
        } else if ($control->value->type === "Link") {
            $result .= $this->generateJsStringLink($control);
        } else if ($control->value->type === "Edit") {
            $result .= $this->generateJsStringEdit($control);
        } else if ($control->value->type === "TableTitle") {
            $result .= $this->generateJsStringPanel($control);
            $result .= "c.layout=\"LayoutX\";\n";
        } else if ($control->value->type === "TableTitleItem") {
            $result .= $this->generateJsStringPanel($control);
            $result .= "c.heavyEnabled=" . $control->value->property->getItem("heavyEnabled")->value->asString . ";\n";
            $result .= "c.heavy=" . $control->value->property->getItem("heavy")->value->asString . ";\n";
        } else if ($control->value->type === "TableBody") {
            $result .= $this->generateJsStringTableBody($control);
        } else if ($control->value->type === "TableBodyItem") {
            $result .= $this->generateJsStringTableBodyItem($control);
        } else if ($control->value->type === "DivRoot") {
            $result .= $this->generateJsStringPanel($control);
        } else if ($control->value->type === "RichEdit") {
            $result .= $this->generateJsStringRichEdit($control);
        } else if ($control->value->type === "LayoutX" || $control->value->type === "LayoutY") {
            $result .= $this->generateJsStringLayout($control);
        } else if ($control->value->type === "LayoutXItem" || $control->value->type === "LayoutYItem") {
            $result .= $this->generateJsStringLayoutItem($control);
        } else if ($control->value->type === "FileUpload") {
            $result .= $this->generateJsStringUploadFile($control);
        } else if ($control->value->type === "CheckBox") {
            $result .= $this->generateJsStringCheckBox($control);
        } else if ($control->value->type === "Button") {
            $result .= $this->generateJsStringButton($control);
        }
        //overflow(autoScroll)
        if ($control->value->property->getItem("autoScroll")->value->asString === "true") {
            $result .= "ee.setAutoScroll(c," . $control->value->property->getItem("autoScroll")->value->asString . ");\n";
        }
        return $result;
    }

    private function generateJsStringLink(Tree $control): string {
        $result = "";
        $result .= $this->generateJsStringPanel($control);
        //addLink(c, "www.baidu.com");
        //产生url
        $url = $control->value->property->getItem("linkInternal")->value->asString;
        if (StringFunc::length($url) > 0) {
            $url = StringFunc:: addFrontChar($url, '/');
            $url = StringFunc:: deleteRearChar($url, '/');
            $url = "/" . $this->solution->getProject($this->projectItem)->value->projectFolderName . $url;
            $url = "ee.aspx?_L_=" . $url;
        } else {
            $url = $control->value->property->getItem("linkExternal")->value->asString;
        }
        //产生参数
        $urlParams = new \Etc\UrlParams();
        $urlParams->decode($control->value->property->getItem("params")->value->asString);
        for ($i = 0; $i < count($urlParams->items); $i++) {
            $url .= "&" . $urlParams->items[$i]->name . "=" . $this->scriptEngine->getInlineResult($urlParams->items[$i]->value);
        }
        //产生语句
        $result .= "addLink(c, \"" . $url . "\");\n";
        return $result;
    }

    private function generateJsStringEdit(Tree $control): string {
        $result = "";
        $result .= $this->generateJsStringPanel($control);
        //eb.addEdit(c, font, fontSize, fontColor, fontBold, password, multiLine, inputHint);
        //缓存载入皮肤
        $project = $this->solution->getProject($this->projectItem);
        if ($project->value->skin == null) {
            $project->value->skin = new \Etc\Skin();
        }
        $skinItem = $project->value->skin->loadXml($project->value->projectPath . "skins" . Pub::$pathSeperator .
            $control->value->property->getItem("backgroundSkin")->value->asString . ".xml");
        if ($skinItem == null) return $result;
        $fontBold = "normal";
        if ($control->value->property->getItem("inputFontBold")->value->asString === "true") {
            $fontBold = "bold";
        }
        $password = "false";
        if ($control->value->property->getItem("inputPassword")->value->asString === "true") {
            $password = "true";
        }
        $multiLine = "false";
        if ($control->value->property->getItem("multiLine")->value->asString === "true") {
            $multiLine = "true";
        }
        $inputHint = "false";
        if ($control->value->property->getItem("inputHint")->value->asString === "true") {
            $inputHint = "true";
        }
        $result .= "eb.addEdit(c," .
            "\"" . $control->value->property->getItem("inputFont")->value->asString . "\"," .
            "\"" . $control->value->property->getItem("inputFontSize")->value->asString . "pt\"," .
            "\"#" . $control->value->property->getItem("inputFontColor")->value->asString . "\"," .
            "\"" . $fontBold . "\"," .
            $password . "," .
            $multiLine . "," .
            $inputHint .
            ");\n";
        //设置初始值
        if (StringFunc::length($control->value->property->getItem("inputText")->value->asString) > 0) {
            $result .= "c._input.value=\"" . StringFunc::replace(
                    $this->scriptEngine->getInlineResult($control->value->property->getItem("inputText")->value->asString),
                    "\"", "\\\"") . "\";\n";
        }
        //文字自适应
        //eb.setInputFontSizeAuto(c, xx);
        if ($control->value->property->getItem("inputFontSizeAuto")->value->asInt32 > 0) {
            $result .= "eb.setInputFontSizeAuto(c, " . $control->value->property->getItem("inputFontSizeAuto")->value->asInt32 . ");\n";
        }
        //密码框
        if ($control->value->property->getItem("inputPassword")->value->asString === "true") {
            //$result += "c._input.type=\"password\";\n";
        }
        //事件
        if (StringFunc::length($control->value->property->getItem("onFocus")->value->asString) > 0) {
            $result .= "eb.addEvent(c._input,\"focus\", function (event) {\n" .
                "var sender = event.target ? event.target : (event.srcElement ? event.srcElement : null);\n" .
                "if (sender == null) return;\n" .
                $this->scriptEngine->getInlineResult($control->value->property->getItem("onFocus")->value->asString) .
                "\n},false);\n";
        }
        if (StringFunc::length($control->value->property->getItem("onFocusLost")->value->asString) > 0) {
            $result .= "eb.addEvent(c._input,\"blur\", function (event) {\n" .
                "var sender = event.target ? event.target : (event.srcElement ? event.srcElement : null);\n" .
                "if (sender == null) return;\n" .
                $this->scriptEngine->getInlineResult($control->value->property->getItem("onFocusLost")->value->asString) .
                "\n},false);\n";
        }
        if (StringFunc::length($control->value->property->getItem("onChange")->value->asString) > 0) {
            $result .= "eb.addEvent(c._input,\"input\", function (event) {\n" .
                "var sender = event.target ? event.target : (event.srcElement ? event.srcElement : null);\n" .
                "if (sender == null) return;\n" .
                $this->scriptEngine->getInlineResult($control->value->property->getItem("onChange")->value->asString) .
                "\n},false);\n";
        }
        return $result;
    }

    private function generateJsStringRichEdit(Tree $control): string {
        $result = "";
        //string text;
        $control->value->property->getItem("backgroundSkin"->value->asString = ""; //清空设计状态的皮肤
        $text = $control->value->property->getItem("text")->value->asString;
        $control->value->property->getItem("text")->value->asString = ""; //清空设计状态的文字
        $result .= $this->generateJsStringPanel($control);
        //createRichedit(c,text);
        $result .= "createRichedit(c,\"" . StringFunc::replace($this->scriptEngine->getInlineResult($text), "\"", "\\\"") . "\");\n";
        return $result;
    }

    private function generateJsStringLayout(Tree $control): string {
        $result = "";
        $result .= $this->generateJsStringPanel($control);
        $result .= "c.layout=\"" . $control->value->type . "\";\n";
        return $result;
    }

    private function generateJsStringLayoutItem(Tree $control): string {
        $result = "";
        $result .= $this->generateJsStringPanel($control);
        $result .= "c.heavyEnabled=" . $control->value->property->getItem("heavyEnabled")->value->asString . ";\n";
        $result .= "c.heavy=" . $control->value->property->getItem("heavy")->value->asString . ";\n";
        return $result;
    }

    private function generateJsStringUploadFile(Tree $control): string {
        $result = $this->generateJsStringPanel($control);
        $result .=
            "c.innerHTML +=\n" .
            "    \"<form id='ee_" . $control->value->name . "_form' method='post' action='ee.aspx?_L_=/" .
            $this->solution->getProject($this->projectItem)->value->projectFolderName . Solution:: getPath($this->projectItem) . "&_F_=U' target='ee_" . $control->value->name . "_frame' \" +\n" .
            "    \"enctype='multipart/form-data'>\" +\n" .
            "    \"<input type='file' id='ee_" . $control->value->name . "_fileupload' name='fileUp' style='position: absolute; left:0px; top: 0px; width:100%; height:100%;'/>\" +\n" .
            "    \"<input type='hidden' id='ee_" . $control->value->name . "_eio' name='eio'/>\" +\n" .
            "    \"<input type='hidden' name='controlName' value='" . $control->value->name . "' />\" +\n" .
            "    \"</form> \" +\n" .
            "    \"<iframe id='ee_" . $control->value->name . "_frame' name='ee_" . $control->value->name . "_frame' style='display: none;'></iframe>\";\n" .
            "c.form = \$g(\"ee_" . $control->value->name . "_form\");\n" .
            "c.fileUpload = \$g(\"ee_" . $control->value->name . "_fileupload\");\n" .
            "c.frame = \$g(\"ee_" . $control->value->name . "_frame\");\n" .
            "c.autoUpload = " . $control->value->property->getItem("autoUpload")->value->asString . ";\n" .
            "c.uploadStop = false;\n" .
            "c.eio = \$g(\"ee_" . $control->value->name . "_eio\");\n" .
            "c.onUploadStartC = function (filePath, fileName, fileExt) {\n" .
            $this->scriptEngine->getInlineResult($control->value->property->getItem("onUploadStartC")->value->asString) . "\n" .
            "    this.eio.value = eio.buffo;\n" .
            "    this.form.submit(); \n" .
            "}\n" .
            "c.onUploadProgress = function (filePath, fileName, fileExt, sizeCurrent, sizeTotal) {\n" .
            $this->scriptEngine->getInlineResult($control->value->property->getItem("onUploadProgress")->value->asString) . "\n" .
            "}\n" .
            "c.onUploadError = function (filePath, fileName, fileExt, errorCode, errorString) {\n" .
            $this->scriptEngine->getInlineResult($control->value->property->getItem("onUploadError")->value->asString) . "\n" .
            "}\n" .
            "c.onUploadCompleteC = function (filePath, fileName, fileExt) {\n" .
            $this->scriptEngine->getInlineResult($control->value->property->getItem("onUploadCompleteC")->value->asString) . "\n" .
            "}\n" .
            "c.fileUpload.onchange = function () {\n" .
            "    if (this.parentNode.parentNode.autoUpload) {\n" .
            "        this.parentNode.parentNode.start();\n" .
            "    }\n" .
            "}\n" .
            "c.start = function () {\n" .
            "    var f = this.fileUpload.value;\n" .
            "    var pos=f.lastIndexOf(\"\\\\\");\n" .
            "    var fileName = f.substring(pos+1);\n" .
            "    pos = f.lastIndexOf(\".\");\n" .
            "    var fileExt = pos<0 ? \"\" : f.substring(pos);\n" .
            "    var filePath = f.substring(0, pos+1);  \n" .
            "    this.uploadFilePath = filePath;\n" .
            "    this.uploadFilename = fileName;\n" .
            "    this.uploadFileExt = fileExt;\n" .
            "    this.onUploadStartC(filePath, fileName, fileExt);\n" .
            "    " . $control->value->name . "_start();\n" .
            "}\n" .
            "c.stop = function () {\n" .
            "    " . $control->value->name . "_stop();\n" .
            "}\n";

        return $result;
    }

    /**
     * 获得":"前的值
     * @param string $value
     * @return string
     */
    private function getColonStringValue(string $value): string {
        $i = StringFunc::indexOf($value, ':');
        if ($i < 0) {
            return $value;
        } else {
            return StringFunc::copy($value, 0, $i);
        }
    }

    private function generateJsStringPanel(Tree $control): string {
        $result = new StringBuilder();
        //string parentName;
        //string sTemp, sTemp1, sTemp2;
        //生成div
        //c = createPanel($("divRoot"), "control1", "303030", 500, 10, 400, 200);
        //relative
        if ($control === $this->divRoot) {
            $parentName = "divRoot";
        } else {
            $parentName = "ee_" . $control->parent->value->name;
        }
        $sTemp = "";
        if ($control->value->property->getItem("bgColorEnabled")->value->asString === "true") {
            $sTemp = $control->value->property->getItem("backgroundColor")->value->asString;
        }
        $result->Append(
            "c = createPanel(\$g(\"" . $parentName . "\"), \"ee_" . $control->value->name .
            "\", \"" . $sTemp . "\", " .
            $control->value->property->getItem("left")->value->asInt32 . ", " .
            $control->value->property->getItem("top")->value->asInt32 . ", " .
            $control->value->property->getItem("width")->value->asInt32 . ", " .
            $control->value->property->getItem("height")->value->asInt32 . ");\n"
        );
        //outer: eb.setOuter(c,ol,ot,or,ob);
        //$control->value = new \Solution\Page\Control();
        if (($control->value->property->getItem("outerLeft")->value->asInt32 != 0) ||
            ($control->value->property->getItem("outerTop")->value->asInt32 != 0) ||
            ($control->value->property->getItem("outerRight")->value->asInt32 != 0) ||
            ($control->value->property->getItem("outerBottom")->value->asInt32 != 0)) {
            $result->Append(
                "eb.setOuter(c," .
                $control->value->property->getItem("outerLeft")->value->asInt32 . "," .
                $control->value->property->getItem("outerTop")->value->asInt32 . "," .
                $control->value->property->getItem("outerRight")->value->asInt32 . "," .
                $control->value->property->getItem("outerBottom")->value->asInt32 . ");\n"
            );
        }
        //cursor
        if (!$control->value->property->getItem("cursor")->value->asString === "auto") {
            $result->Append("c.style.cursor=\"" . $control->value->property->getItem("cursor")->value->asString . "\";\n");
        }
        //alpha
        if ($control->value->property->getItem("alpha")->value->asDouble != 0) {
            $result->Append(
                "eb.setAlpha(c," .
                max(0, min(100, floor((1 - $control->value->property->getItem("alpha")->value->asDouble) * 100))) .
                ");\n"
            );
        }
        //最小宽度和最小高度
        if ($control->value->property->getItem("minWidth")->value->asInt32 > 0) {
            $result->Append("c.minWidth=" . $control->value->property->getItem("minWidth")->value->asInt32 . ";\n");
        }
        if ($control->value->property->getItem("minHeight")->value->asInt32 > 0) {
            $result->Append("c.minHeight=" . $control->value->property->getItem("minHeight")->value->asInt32 . ";\n");
        }
        //生成皮肤
        $project = $this->solution->getProject($this->projectItem); //TamPub1 . Tree < Solution . Item>
        if (StringFunc::length($control->value->property->getItem("backgroundSkin")->value->asString) > 0) {
            //缓存载入皮肤
            if ($project->value->skin == null) {
                $project->value->skin = new Etc . Skin();
            }
            //Etc . Skin . Item
            $skinItem = $project->value->skin->loadXml($project->value->projectPath . "skins\\" .
                $control->value->property->getItem("backgroundSkin")->value->asString . ".xml");
            //addSkin(c, "/project2/skin1", 82, 54, 9, 9, 63, 35);
            try {
                $result->Append(
                    "addSkin(c, \"/" . $project->value->projectFolderName . "/skins/" .
                    $control->value->property->getItem("backgroundSkin")->value->asString . "." . $skinItem->imageType . "\"," .
                    "\"" . $skinItem->clipMode . "\"," .
                    $skinItem->image->Width . "," .
                    $skinItem->image->Height . "," .
                    $skinItem->resizableArea->X . "," .
                    $skinItem->resizableArea->Y . "," .
                    $skinItem->resizableArea->Width . "," .
                    $skinItem->resizableArea->Height . "," .
                    $skinItem->clientArea->X . "," .
                    $skinItem->clientArea->Y . "," .
                    $skinItem->clientArea->Width . "," .
                    $skinItem->clientArea->Height . ");\n"
                );
            } catch (\Exception $e) {
            }
        }
        //生成背景图片
        //ee.setImage(c,"/project2/新的页面1/20120615102010_0878.jpg","trim","alt","title");
        if (StringFunc::length($control->value->property->getItem("backgroundImg")->value->asString) > 0) {
            if (DelphiString::copy($control->value->property->getItem("backgroundImg")->value->asString, 1, 4) === "url:") {
                $sTemp = $control->value->property->getItem("backgroundImg")->value->asString;
            } else {
                $sTemp = "/" . $project->value->projectFolderName .
                    StringFunc:: addRearChar(Solution::getPath($this->projectItem), '/') .
                    $control->value->property->getItem("backgroundImg")->value->asString;
            }
            $sTemp1 = $this->scriptEngine->getInlineResult(
                StringFunc::replace(StringFunc::replace(StringFunc::replace(StringFunc::replace(
                    $control->value->property->getItem("imgAlt")->value->asString,
                    "\\", "\\\\"), "\"", "\\\""), "\r\n", "\n"), "\n", "\\n")
            );
            $sTemp2 = $this->scriptEngine->getInlineResult(
                StringFunc::replace(StringFunc::replace(StringFunc::replace(StringFunc::replace(
                    $control->value->property->getItem("imgTitle")->value->asString,
                    "\\", "\\\\"), "\"", "\\\""), "\r\n", "\n"), "\n", "\\n")
            );
            $result->Append(
                "ee.setImage(c,\"" . $sTemp . "\",\"" .
                $control->value->property->getItem("backgroundImgMode")->value->asString . "\"" .
                ",\"" . $sTemp1 . "\"" .
                ",\"" . $sTemp2 . "\")\n"
            );
            if ($this->jsStringSearchTextEnabled) {
                $this->jsStringSearchText->Append(
                    "<img src = \"cache" . $sTemp . "\"" .
                    " alt=\"" . $sTemp1 . "\"" .
                    " title=\"" . $sTemp2 . "\"" .
                    " />\n"
                );
            }
        }
        //生成内部文字
        //addText(c,"假如我们在一个布局中为了美观对齐，有时我们需容文字都","center","middle","宋体",9,"e0f000","bold");
        if (StringFunc::length($control->value->property->getItem("text")->value->asString) > 0) {
            //result += "TDIV_Current.style.whiteSpace = \"pre-wrap\";\n"; //换行
            $hAlign = "center";
            if ($control->value->property->getItem("hAlign")->value->asString === "left") {
                $hAlign = "left";
            } else if ($control->value->property->getItem("hAlign")->value->asString === "right") {
                $hAlign = "right";
            }
            $vAlign = "middle";
            if ($control->value->property->getItem("vAlign")->value->asString === "top") {
                $vAlign = "top";
            } else if ($control->value->property->getItem("vAlign")->value->asString === "bottom") {
                $vAlign = "bottom";
            }
            $sTemp = $this->scriptEngine->getInlineResult($control->value->property->getItem("text")->value->asString);
            $result->Append(
                "addText(c, \"" .
                StringFunc::replace(StringFunc::replace(StringFunc::replace(
                    $sTemp, "\"", "\\\""), "\r\n", "\n"), "\n", "<br/>") .
                "\", \"" . $hAlign . "\", \"" . $vAlign .
                "\", \"" . $control->value->property->getItem("fontFamily")->value->asString .
                "\", " . $control->value->property->getItem("fontSize")->value->asString . ", \"" .
                $control->value->property->getItem("fontColor")->value->asString . "\", \"" .
                ($control->value->property->getItem("fontBold")->value->asString === "true" ? "bold" : "normal") . "\");\n"
            );
            //文字自适应
            //eb.setFontSizeAuto(c, xx);
            if ($control->value->property->getItem("fontSizeAuto")->value->asInt32 > 0) {
                $result->Append("eb.setFontSizeAuto(c, " . $control->value->property->getItem("fontSizeAuto")->value->asInt32 . ");\n");
            }
            if ($this->jsStringSearchTextEnabled) {
                $this->jsStringSearchText->Append(
                    StringFunc::replace(StringFunc::replace(StringFunc::replace(StringFunc::replace(
                        $sTemp, "<", "&lt;"), ">", "&gt;"), "\r\n", "\n"), "\n", "<br/>") .
                    "<br/>"
                );
            }
        }
        //note
        if (StringFunc::length($control->value->property->getItem("note")->value->asString) > 0) {
            $sTemp = $this->scriptEngine->getInlineResult($control->value->property->getItem("note")->value->asString);
            $result->Append("c.note=\"" .
                StringFunc::replace(StringFunc::replace(StringFunc::replace(
                    $sTemp, "\"", "\\\""), "\r\n", "\n"), "\n", "<br/>") .
                "\";\n"
            );
        }
        //dock
        if (!($control->value->property->getItem("dockX")->value->asString === "disabled") ||
            !($control->value->property->getItem("dockY")->value->asString === "disabled")) {
            $result->Append(
                "eb.setDock(c,\"" . $control->value->property->getItem("dockX")->value->asString . "\",\"" .
                $control->value->property->getItem("dockY")->value->asString . "\");\n"
            );
        }
        //bind
        if (StringFunc::length($control->value->property->getItem("bindControl")->value->asString) > 0) {
            $result->Append("eb.setBind(c,\"" . $control->value->property->getItem("bindControl")->value->asString . "\",\"" .
                $control->value->property->getItem("bindLeft")->value->asString . "\",\"" .
                $control->value->property->getItem("bindTop")->value->asString . "\",\"" .
                $control->value->property->getItem("bindRight")->value->asString . "\",\"" .
                $control->value->property->getItem("bindBottom")->value->asString . "\");\n"
            );
        }
        //ratio
        if ($control->value->property->getItem("dockX")->value->asString === "ratio") {
            $result->Append("c.leftRatio=" . $control->value->property->getItem("leftRatio")->value->asDouble . ";\n");
            $result->Append("c.widthRatio=" . $control->value->property->getItem("widthRatio")->value->asDouble . ";\n");
        }
        if ($control->value->property->getItem("dockY")->value->asString === "ratio") {
            $result->Append("c.topRatio=" . $control->value->property->getItem("topRatio")->value->asDouble . ";\n");
            $result->Append("c.heightRatio=" . $control->value->property->getItem("heightRatio")->value->asDouble . ";\n");
        }
        if ($control->value->property->getItem("lockRatio")->value->asString === "true") {
            $result->Append("c.sizeRatio=" . $control->value->property->getItem("sizeRatio")->value->asDouble . ";\n");
            $result->Append("c.lockRatio=true;\n");
        }
        //生成动画
        if ((!($this->getColonStringValue($control->value->property->getItem("ani2Alpha")->value->asString) === "null")) ||
            (!($this->getColonStringValue($control->value->property->getItem("ani2Pos")->value->asString) === "null")) ||
            (!($this->getColonStringValue($control->value->property->getItem("ani2Size")->value->asString) === "null"))) {
            //eb.setAni(c, "whiteAlpha", "leftBonus", null, 1000, true, false);
            $result->Append("eb.setAni2(c,1,\"" . $this->getColonStringValue($control->value->property->getItem("ani2Alpha")->value->asString) .
                "\", \"" . $this->getColonStringValue($control->value->property->getItem("ani2Pos")->value->asString) .
                "\", \"" . $this->getColonStringValue($control->value->property->getItem("ani2Size")->value->asString) .
                "\", " . $control->value->property->getItem("ani2Delay")->value->asString .
                ", " . $control->value->property->getItem("ani2AutoHide")->value->asString .
                ");\n"
            );
            if ((StringFunc::length($control->value->property->getItem("onAni2Start")->value->asString) > 0) ||
                (StringFunc::length($control->value->property->getItem("onAni2End")->value->asString) > 0)) {
                $result->Append("eb.setAniEvent(c,1,\nfunction(sender) {\n" .
                    $this->scriptEngine->getInlineResult($control->value->property->getItem("onAni2Start")->value->asString) . "\n},\n");
                $result->Append("function(sender) {\n" .
                    $this->scriptEngine->getInlineResult($control->value->property->getItem("onAni2End")->value->asString) . "\n}\n);\n");
            }
        }
        if ((!($this->getColonStringValue($control->value->property->getItem("aniAlpha")->value->asString) === "null")) ||
            (!($this->getColonStringValue($control->value->property->getItem("aniPos")->value->asString) === "null")) ||
            (!($this->getColonStringValue($control->value->property->getItem("aniSize")->value->asString) === "null"))) {
            //eb.setAni(c, "whiteAlpha", "leftBonus", null, 1000, true, false);
            $result->Append("eb.setAni2(c,0,\"" . $this->getColonStringValue($control->value->property->getItem("aniAlpha")->value->asString) .
                "\", \"" . $this->getColonStringValue($control->value->property->getItem("aniPos")->value->asString) .
                "\", \"" . $this->getColonStringValue($control->value->property->getItem("aniSize")->value->asString) .
                "\", " . $control->value->property->getItem("aniDelay")->value->asString .
                ", " . $control->value->property->getItem("aniAutoHide")->value->asString .
                ");\n"
            );
            if ((StringFunc::length($control->value->property->getItem("onAniStart")->value->asString) > 0) ||
                (StringFunc::length($control->value->property->getItem("onAniEnd")->value->asString) > 0)) {
                $result->Append("eb.setAniEvent(c,0,\nfunction(sender) {\n" .
                    $this->scriptEngine->getInlineResult($control->value->property->getItem("onAniStart")->value->asString) . "\n},\n");
                $result->Append("function(sender) {\n" .
                    $this->scriptEngine->getInlineResult($control->value->property->getItem("onAniEnd")->value->asString) . "\n}\n);\n");
            }
        }
        //层级控制
        if ($control->value->property->getItem("layerName")->value->asString . Length > 0) {
            $result->Append("c.layerName=\"" . $control->value->property->getItem("layerName")->value->asString . "\";\n");
            $result->Append("c.style.visibility=\"hidden\";\n");
        }
        //产生事件
        if (StringFunc::length($control->value->property->getItem("onClick")->value->asString) > 0) {
            $result->Append("ee.setOnClick(c,function(sender,event) {\n" . $this->scriptEngine->getInlineResult($control->value->property->getItem("onClick")->value->asString) . "\n});\n");
        }
        if (StringFunc::length($control->value->property->getItem("onMouseEnter")->value->asString) > 0) {
            $result->Append("c.onmouseenter=function() {\n" . $this->scriptEngine->getInlineResult($control->value->property->getItem("onMouseEnter")->value->asString) . "\n}\n");
        }
        if (StringFunc::length($control->value->property->getItem("onMouseLeave")->value->asString) > 0) {
            $result->Append("c.onmouseleave=function() {\n" . $this->scriptEngine->getInlineResult($control->value->property->getItem("onMouseLeave")->value->asString) . "\n}\n");
        }
        if (StringFunc::length($control->value->property->getItem("onImageLoad")->value->asString) > 0) {
            $result->Append("c.onImageLoad=function(sender) {\n" . $this->scriptEngine->getInlineResult($control->value->property->getItem("onImageLoad")->value->asString) . "\n}\n");
        }
        $needInitMouse = false;
        if ($control->value->property->getItem("onMouseDown")->value->asString . Length > 0) {
            $result->Append("c.eeMouseDown=function(sender,event,x,y) {\n" . $this->scriptEngine->getInlineResult($control->value->property->getItem("onMouseDown")->value->asString) . "\n};\n");
            $needInitMouse = true;
        }
        if ($control->value->property->getItem("onMouseUp")->value->asString . Length > 0) {
            $result->Append("c.eeMouseUp=function(sender,event,x,y) {\n" . $this->scriptEngine->getInlineResult($control->value->property->getItem("onMouseUp")->value->asString) . "\n};\n");
            $needInitMouse = true;
        }
        if ($control->value->property->getItem("onMouseMove")->value->asString . Length > 0) {
            $result->Append("c.eeMouseMove=function(sender,event,x,y) {\n" . $this->scriptEngine->getInlineResult($control->value->property->getItem("onMouseMove")->value->asString) . "\n};\n");
            $needInitMouse = true;
        }
        if ($needInitMouse) {
            $result->Append("eb.initMouseEvent(c);\n");
        }
        //divRoot的特殊处理
        if ($control == $this->divRoot) {
            $result->Append("c.style.position=\"relative\";\n");
            //解决自适应屏幕状态下载入瞬间大小闪烁的现象
            $sTemp = $control->value->property->getItem("dockX")->value->asString;
            if ($sTemp === "fill" || $sTemp === "ratio") {
                $result->Append("ee.setRect(c,null,null,1,null);\n");
            }
            $sTemp = $control->value->property->getItem("dockY")->value->asString;
            if ($sTemp === "fill" || $sTemp === "ratio") {
                $result->Append("ee.setRect(c,null,null,null,1);\n");
            }
        }
        return $result->ToString();
    }

    private function generateJsStringCheckBox(Tree $control): string {
        $result = new StringBuilder();
        $result->Append($this->generateJsStringPanel($control));
        $checkBox = new Tree();
        $checkBox->value = $control->value->clone();
        $checkBox->value->name .= "status1"; //特殊名字如:ee_checkbox1status1
        //转移属性
        $checkBox->parent = $control->parent;
        $checkBox->value->property->getItem("bindControl")->value->asString = $control->value->name;
        $checkBox->value->property->getItem("bindLeft")->value->asString = "left";
        $checkBox->value->property->getItem("bindRight")->value->asString = "right";
        $checkBox->value->property->getItem("bindTop")->value->asString = "top";
        $checkBox->value->property->getItem("bindBottom")->value->asString = "bottom";
        $checkBox->value->property->getItem("backgroundColor")->value->asString = $checkBox->value->property->getItem("backgroundColor1")->value->asString;
        $checkBox->value->property->getItem("bgColorEnabled")->value->asString = $checkBox->value->property->getItem("bgColorEnabled1")->value->asString;
        $checkBox->value->property->getItem("backgroundImg")->value->asString = $checkBox->value->property->getItem("backgroundImg1")->value->asString;
        $checkBox->value->property->getItem("backgroundImgMode")->value->asString = $checkBox->value->property->getItem("backgroundImgMode1")->value->asString;
        $checkBox->value->property->getItem("backgroundSkin")->value->asString = $checkBox->value->property->getItem("backgroundSkin1")->value->asString;
        $result->Append($this->generateJsStringPanel($checkBox));
        $result->Append("c=\$g(\"ee_" . $control->value->name . "\");\n");
        $result->Append("c.status1=\$g(\"ee_" . $checkBox->value->name . "\");\n");
        $result->Append("c.status1.checkBox=c;\n");
        $result->Append("ee.setCheckBoxValue(c," . $checkBox->value->property->getItem("checkValue")->value->asString . ");\n");
        if (StringFunc::length($control->value->property->getItem("onValueChange")->value->asString) > 0) {
            $result->Append("c.onValueChange = function (sender, value) {\n" . $this->scriptEngine->getInlineResult($control->value->property->getItem("onValueChange")->value->asString) . "\n}\n");
        }

        return $result->ToString();
    }

    private function generateJsStringButton(Tree $control): string {
        $result = new StringBuilder();
        //copy data
        $s0 = new Tree(); //button
        $s1 = new Tree(); //normal
        $s2 = new Tree(); //hover
        $s3 = new Tree(); //click down
        $s4 = new Tree(); //click layer
        $s0->parent = $control->parent;
        $s1->parent = $s0;
        $s2->parent = $s0;
        $s3->parent = $s0;
        $s4->parent = $s0;
        $s0->value = $control->value->clone();
        $s1->value = $control->value->clone();
        $s2->value = $control->value->clone();
        $s3->value = $control->value->clone();
        $s4->value = $control->value->clone();
        //event
        $s0->value->property->getItem("onClick")->value->asString = "";
        $s0->value->property->getItem("onMouseEnter")->value->asString = "";
        $s0->value->property->getItem("onMouseLeave")->value->asString = "";
        $s1->value->property->getItem("onClick")->value->asString = "";
        $s1->value->property->getItem("onMouseEnter")->value->asString = "";
        $s1->value->property->getItem("onMouseLeave")->value->asString = "";
        $s1->value->property->getItem("onImageLoad")->value->asString = "";
        $s2->value->property->getItem("onClick")->value->asString = "";
        $s2->value->property->getItem("onMouseEnter")->value->asString = "";
        $s2->value->property->getItem("onMouseLeave")->value->asString = "";
        $s2->value->property->getItem("onImageLoad")->value->asString = "";
        $s3->value->property->getItem("onClick")->value->asString = "";
        $s3->value->property->getItem("onMouseEnter")->value->asString = "";
        $s3->value->property->getItem("onMouseLeave")->value->asString = "";
        $s3->value->property->getItem("onImageLoad")->value->asString = "";
        $s4->value->property->getItem("onImageLoad")->value->asString = "";
        //generate base($s0)
        $s0->value->property->getItem("bgColorEnabled")->value->asString = "false";
        $s0->value->property->getItem("backgroundImg")->value->asString = "url:res/empty.png";
        $s0->value->property->getItem("backgroundImgMode")->value->asString = "stretch";
        $s0->value->property->getItem("backgroundSkin")->value->asString = "";
        $s0->value->property->getItem("text")->value->asString = "";
        $result->Append($this->generateJsStringPanel($s0));
        //generate $s1
        $s1->value->name .= "status1"; //特殊名字如:ee_checkbox1status1
        //$s1.value.property.getItem("bindControl").value.asString = $control.value.name;
        //$s1.value.property.getItem("bindLeft").value.asString = "left";
        //$s1.value.property.getItem("bindRight").value.asString = "right";
        //$s1.value.property.getItem("bindTop").value.asString = "top";
        //$s1.value.property.getItem("bindBottom").value.asString = "bottom";
        $s1->value->property->getItem("dockX")->value->asString = "fill";
        $s1->value->property->getItem("dockY")->value->asString = "fill";
        $result->Append($this->generateJsStringPanel($s1));
        $result->Append("c=\$g(\"ee_" . $control->value->name . "\");\n");
        $result->Append("c.status1=\$g(\"ee_" . $s1->value->name . "\");\n");
        $result->Append("c.status1.button=c;\n");
        //generate $s2
        $s2->value->name .= "status2"; //特殊名字如:ee_checkbox1status2
        $s2->value->property->getItem("dockX")->value->asString = "fill";
        $s2->value->property->getItem("dockY")->value->asString = "fill";
        $s2->value->property->getItem("backgroundColor")->value->asString = $s2->value->property->getItem("backgroundColor1")->value->asString;
        $s2->value->property->getItem("bgColorEnabled")->value->asString = $s2->value->property->getItem("bgColorEnabled1")->value->asString;
        $s2->value->property->getItem("backgroundImg")->value->asString = $s2->value->property->getItem("backgroundImg1")->value->asString;
        $s2->value->property->getItem("backgroundImgMode")->value->asString = $s2->value->property->getItem("backgroundImgMode1")->value->asString;
        $s2->value->property->getItem("backgroundSkin")->value->asString = $s2->value->property->getItem("backgroundSkin1")->value->asString;
        $s2->value->property->getItem("fontColor")->value->asString = $s2->value->property->getItem("fontColor1")->value->asString;
        $result->Append($this->generateJsStringPanel($s2));
        $result->Append("c=\$g(\"ee_" . $control->value->name . "\");\n");
        $result->Append("c.status2=\$g(\"ee_" . $s2->value->name . "\");\n");
        $result->Append("c.status2.button=c;\n");
        //generate $s3
        $s3->value->name .= "status3"; //特殊名字如:ee_checkbox1status3
        $s3->value->property->getItem("dockX")->value->asString = "fill";
        $s3->value->property->getItem("dockY")->value->asString = "fill";
        $s3->value->property->getItem("backgroundColor")->value->asString = $s3->value->property->getItem("backgroundColor2")->value->asString;
        $s3->value->property->getItem("bgColorEnabled")->value->asString = $s3->value->property->getItem("bgColorEnabled2")->value->asString;
        $s3->value->property->getItem("backgroundImg")->value->asString = $s3->value->property->getItem("backgroundImg2")->value->asString;
        $s3->value->property->getItem("backgroundImgMode")->value->asString = $s3->value->property->getItem("backgroundImgMode2")->value->asString;
        $s3->value->property->getItem("backgroundSkin")->value->asString = $s3->value->property->getItem("backgroundSkin2")->value->asString;
        $s3->value->property->getItem("fontColor")->value->asString = $s3->value->property->getItem("fontColor2")->value->asString;
        $result->Append($this->generateJsStringPanel($s3));
        $result->Append("c=\$g(\"ee_" . $control->value->name . "\");\n");
        $result->Append("c.status3=\$g(\"ee_" . $s3->value->name . "\");\n");
        $result->Append("c.status3.button=c;\n");
        //generate clicklayer($s4)
        $s4->value->name .= "clickLayer";
        $s4->value->property->getItem("dockX")->value->asString = "fill";
        $s4->value->property->getItem("dockY")->value->asString = "fill";
        $s4->value->property->getItem("bgColorEnabled")->value->asString = "false";
        $s4->value->property->getItem("backgroundImg")->value->asString = "url:res/empty.png";
        $s4->value->property->getItem("backgroundImgMode")->value->asString = "stretch";
        $s4->value->property->getItem("backgroundSkin")->value->asString = "";
        $s4->value->property->getItem("text")->value->asString = "";
        $result->Append($this->generateJsStringPanel($s4));
        $result->Append("c=\$g(\"ee_" . $control->value->name . "\");\n");
        $result->Append("c.clickLayer=\$g(\"ee_" . $s4->value->name . "\");\n");
        $result->Append("c.clickLayer.button=c;\n");
        //初始化按钮
        $result->Append("eb.initButton(c);\n");
        //downX,downY属性
        $result->Append("c.downX=" . $control->value->property->getItem("downX")->value->asString . ";\n");
        $result->Append("c.downY=" . $control->value->property->getItem("downY")->value->asString . ";\n");
        return $result->ToString();
    }

    private function generateJsStringTableBody(Tree $control): string {
        $result = new StringBuilder();
        $result->Append($this->generateJsStringPanel($control));
        //c.rowCount=xxx;
        //int rowCount;
        if (count($control->children) == 0) {
            $rowCount = 0;
        } else {
            $rowCount = $control->value->property->getItem("rowCount")->value->asInt32;
        }
        $result->Append("c.visibleRowCount=" . $rowCount . ";\n");
        //c.colCount=xxx;
        //int colCount;
        if (count($control->children) == 0) {
            $colCount = 0;
        } else {
            $colCount = floor(count($control->children) / $control->value->property->getItem("rowCount")->value->asInt32);
        }
        $result->Append("c.colCount=" . colCount . ";\n");
        //dynamic row mode
        $result->Append("c.dynamicMode=" . $control->value->property->getItem("dynamicMode")->value->asString . ";\n");
        if (count($control->children) <= 0) return $result->ToString();
        //循环一行
        //StringBuilder rowVar = null;
        $rowVar = null;
        $onUpdate = new StringBuilder();
        $onUpdate->Append("c.cols=new Array();\n");
        $onUpdate->Append("for(var i=0;i<" . $colCount . ";i++) c.cols.push(new Object());\n");
        $result->Append("c.jsCreateRow=\"");
        $control->getFirst();
        $currentColCount = 0;
        while (true) {
            $control->getNext();
            if ($control->current == null) break;
            //是否是一列
            for ($i = 0; $i < count($control->children); $i++) {
                if ($control->children[$i] == $control->current) {
                    $currentColCount++;
                    if ($control->current->value->property->getItem("onUpdate")->value->asString->Length > 0) {
                        $onUpdate->Append("c.cols[" . ($currentColCount - 1) . "].onUpdate=function(sender,text) {\n");
                        $onUpdate->Append($this->scriptEngine->getInlineResult($control->current->value->property->getItem("onUpdate")->value->asString) . "\n");
                        $onUpdate->Append("}\n");
                    }
                    break;
                }
            }
            if ($currentColCount > $colCount) break;
            //产生rowVar表
            if ($rowVar == null) {
                $rowVar = new StringBuilder();
                $rowVar->Append("c.rowVar=[");
            } else {
                $rowVar->Append(",");
            }
            $rowVar->Append("\"ee_" . $control->current->value->name . "\"");
            //产生语句
            $result->Append(
                StringFunc::replace(StringFunc::replace(StringFunc::replace(
                    $this->generateJsStringControl($control->current),
                    "\"", "\\\""), "\r\n", "\n"), "\n", "\\n\"+\n\"")
            );
        }
        $rowVar->Append("];\n");
        $result->Append("\";\n");
        $result->Append($rowVar->ToString());
        $result->Append($onUpdate->ToString());
        //初始化dynamicMode状态
        if ($control->value->property->getItem("dynamicMode")->value->asString->Equals("false")) {
            $result->Append("eb.initTableBody(c);\n");
            $result->Append("ee.tableSetRowCount(c," . $rowCount . ");\n");
        }
        //当前扫描指针定位到$control下最后一个控件
        //TamPub1->Tree < Control> prevControl;
        $control->getFirst();
        while (true) {
            $prevControl = $control->current;
            $control->getNext();
            if ($control->current == null) break;
            $prevControl = $control->current;
        }
        $this->controls->current = $prevControl;
        return $result->ToString();
    }

    private function generateJsStringTableBodyItem(Tree $control): string {
        $result = "";
        $result .= $this->generateJsStringPanel($control);
        //onUpdate函数取消，在TableBody中一并产生 2016/06/03
        return $result;
    }

    /// <summary>执行2号脚本（后台脚本）</summary>
    public function executeScript2(string $taskSetName, string $data): string {
        $taskSetItem = $this->taskSet->getByName($taskSetName);
        if ($taskSetItem == null) return "";
        //string result;
        //执行用户代码
        try {
            $s2 =
                //接收的数据放入eio接口
                "eio.buffi=\"" . StringFunc::replace(StringFunc::replace(StringFunc::replace(StringFunc::replace(StringFunc::replace($data,
                    "^^", "^"), "^x", "<"), "\"", "\\\""), "\r", "\\r"), "\n", "\\n") . "\";\n" .
                //封装script2
                "var __script2 = function() {\n" .
                $taskSetItem->script2 . "\n" .
                "}\n" .
                "__script2();\n";

            $task = new ExecuteScript2Thread();
            $task->script = $s2;
            $task->engine = $this->scriptEngine;
            $task->taskSetName = $taskSetName;
            $task->start();
            while (true) {
                if ($task->complete) break;
                usleep(5000);
            }
            if (StringFunc::length($task->error) > 0) {
                throw new \Exception($task->error);
            }
            $result = $task->result;
            //scriptEngine.engine.Run(s2);
            //result = scriptEngine.engine.Run("eio.buffo;").ToString();
        } catch (\Exception $e) {
            if ($e == null) {
                //仅用于监测script的执行错误情况
            }
            \Etc\ Pub::$log->writeWarning("script2(" . $taskSetName . ") execute error, errorString=" . $e->getMessage() . ",st=" . $e->getTraceAsString());
            $result = $this->scriptEngine->engine->executeString(
                "eio.buffo=\"\"; eio.appendString8(\"F\"); " .
                "eio.appendString8(\"" .
                StringFunc::replace(StringFunc::replace(StringFunc::replace(
                    $e->getMessage(), "\r\n", "\n"), "\n", "\\n"), "\"", "\\\"") .
                "\");" .
                "eio.buffo;"
            );
        }
        return $result;
    }

    /// <summary>执行FileUpload控件的onUploadStartS()事件</summary>
    public function executeOnUploadStartS(string $controlName, string $eio, string $filename, bool &$cancelUpload, string &$newFilename, string &$errorString): bool {
        $control = getControlByName(controls, controlName);
        if (control == null) return false;
        //接收的数据放入eio接口
        try {
            scriptEngine . engine . Run(
                "eio.buffi=\"" + eio . Replace("^^", "^") . Replace("^x", "<") . Replace("\"", "\\\"") . Replace("\r", "\\r") . Replace("\n", "\\n") + "\";\n" +
                "var cancelUpload = false;\n" +
                "var newFileName = \"\";\n" +
                "var fileName = \"" + filename + "\";\n" +
                "var fileExt =  \"" + Path . GetExtension(filename) + "\";\n" +
                "var errorString = \"\";\n"
            );
        } catch (Exception e) {
            Etc . Pub . log . writeWarning("executeOnUploadStartS() prepare eio.buffi error, errorString=" + e . Message);
            return false;
        }
            //执行用户代码
            try {
                ExecuteScript2Thread task = new ExecuteScript2Thread();
                task . script = control . value . property . getItem("onUploadStartS") . value . asString;
                task . engine = scriptEngine;
                System . Threading . Thread thread = new System . Threading . Thread(task . run);
                thread . Start();
                while (true) {
                    if (task . complete) break;
                    System . Threading . Thread . Sleep(50);
                }
                if (task . error . Length > 0) {
                    throw new Exception(task . error);
                }

                cancelUpload = scriptEngine . engine . Run("cancelUpload") . ToString() . ToUpper() . Equals("TRUE");
                newFilename = scriptEngine . engine . Run("newFileName") . ToString();
                errorString = scriptEngine . engine . Run("errorString") . ToString();
            } catch (Exception e) {
            if (e == null) {
                //仅用于监测script的执行错误情况
            }
            Etc . Pub . log . writeWarning("executeOnUploadStartS() execute error, errorString=" + e . Message);
        }
            return true;
        }

    /// <summary>执行FileUpload控件的onUploadCompletedS()事件</summary>
    public function executeOnUploadCompleteS(string $controlName, string &$eio, string $filename, string $newFilename): bool {
        $control = getControlByName(controls, controlName);
        if (control == null) return false;
        newFilename = newFilename . Replace("\\", "\\\\");
        //接收的数据放入eio接口
        try {
            scriptEngine . engine . Run(
                "eio.clear();\n" +
                "var newFileName = \"" + newFilename + "\";\n" +
                "var fileName = \"" + filename + "\";\n" +
                "var fileExt =  \"" + Path . GetExtension(filename) + "\";\n"
            );
        } catch (Exception e) {
            Etc . Pub . log . writeWarning("executeOnUploadCompleteS() prepare eio.buffi error, errorString=" + e . Message);
            return false;
        }
            //执行用户代码
            try {
                ExecuteScript2Thread task = new ExecuteScript2Thread();
                task . script = control . value . property . getItem("onUploadCompleteS") . value . asString;
                task . engine = scriptEngine;
                System . Threading . Thread thread = new System . Threading . Thread(task . run);
                thread . Start();
                while (true) {
                    if (task . complete) break;
                    System . Threading . Thread . Sleep(50);
                }
                if (task . error . Length > 0) {
                    throw new Exception(task . error);
                }
                eio = scriptEngine . engine . Run("eio.buffo") . ToString();
            } catch (Exception e) {
            if (e == null) {
                //仅用于监测script的执行错误情况
            }
            Etc . Pub . log . writeWarning("executeOnUploadCompleteS() execute error, errorString=" + e . Message);
        }
            return true;
        }
}

}

/**
 * Class ScriptES 服务端功能包,es类
 * @package Solution
 */
class ScriptES {
    public $encoding = "utf-8";
}


/**
 * Class ScriptDatabase 后台javascript的数据库接口
 * @package Solution
 */
class ScriptDatabase {
    /**
     * @var null|\ScriptEngine\DBConnection
     */
    private $dbConnection = null;
    /**
     * @var \ScriptEngine\SqlResultSet
     */
    private $sqlResultSet;

    public function __construct() {
        $this->sqlResultSet = new \ScriptEngine\SqlResultSet();
    }
}

/**
 * Class ScriptResponse 后台javascript的Response接口
 * @package Solution
 */
class ScriptResponse {
    //public System.Web.HttpResponse response = null;
    public $redirectUrl = "";
    //public ScriptResponse(System.Web.HttpResponse response) {
    //this.response = response;
    //}
    public function redirect(string $url): void {
        //response.Redirect(url);
        $this->redirectUrl = $url;
    }
}


namespace Solution\PageWeb;

use Solution\Solution;
use TamPub1\StringFunc;

class ScriptEngineInst {
    /**
     * @var ScriptResponse
     */
    public $scriptResponse = null;
}

class ThreadInitScript extends \Thread {
    //public System.Web.SessionState.HttpSessionState session;
    //public System.Web.HttpRequest request;
    //public System.Web.HttpResponse response;
    /**
     * @var Solution\PageWeb
     */
    public $handle;
    public $complete = false;
    /**
     * @var ScriptEngineInst
     */
    public $result = null;

    public function run() {
        try {
            $result = $this->handle->fInitScriptEngine($this->session, $this->request, $this->response);
        } catch (\Exception $e) {
            \Etc\Pub::$log->writeWarning("script thread init error, errorString=" . $e->Message . ",st=" . $e->StackTrace . ToString());
        }
        $this->complete = true;
    }
}


class ExecuteScript2Thread extends \Thread {
    public $script = "";
    public $complete = false;
    public $taskSetName = "";
    /**
     * @var \ScriptEngine\ScriptEngine
     */
    public $engine = null;
    public $error = "";
    public $result = "";

    public function run() {
        try {
            $this->engine->engine->executeString($this->script);
            $result = $this->engine->engine->executeString("eio.buffo;");
        } catch (\Exception $e) {
            \Etc\Pub::$log->writeWarning("script2(" . $this->taskSetName . ") execute error, errorString=" . $e->getMessage() . ",st=" . $e->getTraceAsString());
            $result = $this->engine->engine->executeString(
                "eio.buffo=\"\"; eio.appendString8(\"F\"); " .
                "eio.appendString8(\"" .
                StringFunc::replace(StringFunc::replace(StringFunc::replace($e->getMessage(), "\r\n", "\n"), "\n", "\\n"), "\"", "\\\"") .
                "\");" .
                "eio.buffo;"
            );
        }
        $this->complete = true;
    }
}

